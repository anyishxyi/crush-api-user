stages:
  - build
  - test
  - publish

cache:
  paths:
    - node_modules/

build-crush:
  image: node:14.5-alpine
  stage: build
  script:
    - npm install --progress=false
    - npm run build
  only:
    - merge_requests
    - master
  artifacts:
    paths:
      - node_modules/

test-crush:
  image: node:14.5-alpine
  stage: test
  script:
    - chmod +x ./setup_env.sh
    - ./setup_env.sh
    - npm test
  only:
    - merge_requests
    - master

build-image-crush:
  image: alpine/git
  stage: build
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  services:
    - docker:dind
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
  only:
    - master

publish-image-crush:
  image: alpine/git
  stage: publish
  variables:
    version: 1.0.1
  before_script:
    - git config user.email "${GITLAB_USER_EMAIL}"
    - git config user.name "${GITLAB_USER_NAME}"
    - git remote add demo-tag-origin https://oauth2:${GITLAB_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}
    - git tag -a -a $version -m "Version created by gitlab-ci before publishing on gitlab registry"
    - git push demo-tag-origin -a $version
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  services:
    - docker:dind
  script:
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master