stages:
  - build
  - test
  # - push

services:
  - docker:dind

cache:
  paths:
    - node_modules/

build-crush:
  image: node:14.5-alpine
  stage: build
  script:
    - npm install --progress=false
    - npm run build
  only:
    - merge_requests
  artifacts:
    paths:
      - node_modules/

test-crush:
  image: node:14.5-alpine
  stage: test
  script:
    - chmod +x ./setup_env.sh
    - ./setup_env.sh
    - npm test
  only:
    - merge_requests

build-image-crush:
  image: docker:20.10.1
  stage: build
  script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - >
      docker build
      --pull
      --build-arg http_proxy=$http_proxy
      --build-arg https_proxy=$https_proxy
      --build-arg no_proxy=$no_proxy
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  only:
    - master